#+PROPERTY: header-args :results silent

* System Config
[[[elisp:(call-process (file-name-concat (getenv "DOTFILES_DIR") "scripts/tangle_all_configs.sh") nil 0)][Tangle All Configs]]]

** Config Index
- [[file:configs/alacritty.org][Alacritty]]
- [[file:configs/awesome.org][Awesome]]
- [[file:configs/dunst.org][Dunst]]
- [[file:configs/emacs.org][Emacs]]
- [[file:configs/eww.org][Eww]]
- [[file:configs/firefox.org][Firefox]]
- [[file:configs/git.org][Git]]
- [[file:configs/gtk.org][Gtk]]
- [[file:configs/htop.org][Htop]]
- [[file:configs/hyprland.org][Hyprland]]
- [[file:configs/picom.org][Picom]]
- [[file:configs/qtile.org][Qtile]]
- [[file:configs/rofi.org][Rofi]]
- [[file:configs/waybar.org][Waybar]]
- [[file:configs/zsh.org][Zsh]]

** Preparation
We first need to load the current colorscheme. The [[file:~/.config/current_colorscheme][current_colorscheme]]
file is a symlink to the actual colorscheme file.
#+begin_src emacs-lisp
  (load "~/.config/current_colorscheme" 'nomessage)
#+end_src

Now we add all of the helper functions to the [[help:org-babel-library-of-babel][library of babel]].
#+begin_src emacs-lisp
  (org-babel-lob-ingest "./functions.org")
#+end_src

** Tangle Files
Each config file gets tangled and placed in their respective directories.
#+begin_src emacs-lisp
  (let ((org-confirm-babel-evaluate nil))
    (dolist (config (directory-files "./configs" t "\\.org$"))
      (org-babel-tangle-file config)))
#+end_src
